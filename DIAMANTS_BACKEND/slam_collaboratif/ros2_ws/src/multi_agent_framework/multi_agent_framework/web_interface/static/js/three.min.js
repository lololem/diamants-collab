/*
 * DIAMANTS - Drone Intelligence for Advanced Mapping and Navigation Through Swarms
 * 
 * Copyright (c) 2025 DIAMANTS Project Contributors
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/**
 * Three.js Placeholder
 * ====================
 * Version minimale de Three.js pour tests
 * En production, utiliser la vraie bibliothÃ¨que Three.js
 */

// Three.js stub pour Ã©viter les erreurs 404
window.THREE = {
    Scene: function() {
        return {
            background: null,
            add: function() {},
            remove: function() {}
        };
    },
    
    PerspectiveCamera: function() {
        return {
            position: { set: function() {}, x: 0, y: 0, z: 0 },
            aspect: 1,
            updateProjectionMatrix: function() {},
            lookAt: function() {}
        };
    },
    
    WebGLRenderer: function() {
        return {
            domElement: document.createElement('div'),
            setSize: function() {},
            render: function() {},
            shadowMap: { enabled: false, type: null }
        };
    },
    
    Color: function() { return {}; },
    AmbientLight: function() { return { position: { set: function() {} } }; },
    DirectionalLight: function() { return { 
        position: { set: function() {} },
        castShadow: false
    }; },
    PointLight: function() { return { position: { set: function() {} } }; },
    GridHelper: function() { return {}; },
    Group: function() { 
        return {
            position: { set: function() {} },
            add: function() {},
            children: []
        }; 
    },
    BoxGeometry: function() { return {}; },
    CylinderGeometry: function() { return {}; },
    PlaneGeometry: function() { return {}; },
    MeshLambertMaterial: function() { return {}; },
    MeshBasicMaterial: function() { return {}; },
    LineBasicMaterial: function() { return {}; },
    BufferGeometry: function() { return {}; },
    Mesh: function() { 
        return {
            position: { set: function() {}, x: 0, y: 0, z: 0 },
            rotation: { y: 0 },
            castShadow: false
        }; 
    },
    Line: function() { return { visible: true }; },
    PCFSoftShadowMap: 'PCFSoftShadowMap'
};

// OrbitControls stub
window.THREE.OrbitControls = function() {
    return {
        enableDamping: false,
        dampingFactor: 0,
        update: function() {},
        reset: function() {}
    };
};

console.log('ðŸ“¦ Three.js placeholder chargÃ© - Version minimale pour tests');
console.log('ðŸ’¡ Pour la visualisation 3D complÃ¨te, installer Three.js complet');